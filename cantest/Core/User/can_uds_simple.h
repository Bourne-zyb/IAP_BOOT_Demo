/******************************************************************************
 * @file    can_uds_simple.h
 * @brief   CAN User Data Service (UDS) Simple Example header file.
 * @author  Jason
 * @version V1.0.0
 * @date    2025-3
 * @copyright (c) 2025, All rights reserved.
 ******************************************************************************/

#ifndef __CAN_UDS_SIMPLE_H
#define __CAN_UDS_SIMPLE_H

/*
# Primitive bootloader for stm32, that supports programming via Unified Diagnostic Services (ISO-14229)

## Supported services
|Service|Sub-function|Note|
|---|---|---|
|diagnosticSessionControl (0x10)|programmingSession (0x02)|Needs to enter in programmingSession before downloading software|
|ECUReset (0x11)|HardReset (0x01)|Performs reboot via watchdog|
|ReadDataByIdentifier (0x22)|bootSoftwareIdentificationDataIdentifier (0xF180)|Returns ASCII string|
|RequestDownload (0x34)|   |Performs erasing flash at this stage. dataFormatIdentifier - 0x00 or 0x01 addressAndLengthFormatIdentifier = 44|
|TransferData (0x36)|   |Transfers chunks of data, about 200 bytes|
|RequestTransferExit (0x37)|   |Writes to flash all buffers|
|TesterPresent (0x3E)|   |Do nothing|


| 服务                          | 子功能                                    | 备注                                                                 |
|------------------------------|--------------------------------|--------------------------------------------------------------------|
| 诊断会话控制 (0x10)          | 编程会话 (0x02)                 | 在下载软件之前需要进入编程会话                                      |
| ECU复位 (0x11)               | 硬复位 (0x01)                  | 执行重启                                                 |
| //(这个暂时取消)通过标识符读取数据 (0x22)    | 启动软件标识数据标识符 (0xF180 ) | 返回 ASCII 字符串                                                  |
| 请求服务 (0x31）
| 请求下载 (0x34)              |                                | 在此阶段执行闪存擦除。数据格式标识符 - 0x00 或 0x01，地址和长度格式标识符 = 44 |
| 传输数据 (0x36)              |                                | 传输大约 200 字节的数据块                                          |
| 请求传输退出 (0x37)          |                                | 将所有缓冲区写入闪存                                               |
| //(这个暂时取消)测试仪存在 (0x3E)            |                                | 无操作                                                             |


/******************************************************************************************
 * ECU 固件升级过程 (基于 ISO 15765-2 的 CAN 传输层协议)
 * 本文档补充描述了每个 UDS 服务指令在 CAN 总线传输中的实际帧格式。
 ******************************************************************************************/

/******************************************************************************************
 * ISO 15765-2 CAN 传输层
 * ----------------------------------------------------------------------------- 

/******************************************************************************************
 * 1. 切换到编程会话 (Diagnostic Session Control - 0x10)
 ******************************************************************************************

发送 (CAN 帧)：
-----------------------------------------------------------------------------
| Byte 0       | Byte 1    | Byte 2       | Byte 3 ~ Byte 7            |
-----------------------------------------------------------------------------
| 0x02 (PCI)   | 0x10      | 0x02         | 填充字节 (0x00)             |
-----------------------------------------------------------------------------
示例发送：02 10 02 00 00 00 00 00

接收 (CAN 帧)：
-----------------------------------------------------------------------------
| Byte 0       | Byte 1    | Byte 2       | Byte 3 ~ Byte 7            |
-----------------------------------------------------------------------------
| 0x02 (PCI)   | 0x50      | 0x02         | 填充字节 (0x00)             |
-----------------------------------------------------------------------------
示例接收：02 50 02 00 00 00 00 00
/******************************************************************************************/

/******************************************************************************************
 * 2. 执行擦除内存例程 (Routine Control - 0x31)
 ******************************************************************************************

发送 (CAN 帧)：
-----------------------------------------------------------------------------
| Byte 0       | Byte 1    | Byte 2       | Byte 3 | Byte 4 | Byte 5 ~ Byte 7 |
-----------------------------------------------------------------------------
| 0x04 (PCI)   | 0x31      | 0x01 (启动例程) | 0xFF   | 0x00   | 填充字节 (0x00) |
-----------------------------------------------------------------------------
示例发送：04 31 01 FF 00 00 00 00

接收 (CAN 帧)：
-----------------------------------------------------------------------------
| Byte 0       | Byte 1    | Byte 2       | Byte 3 | Byte 4 | Byte 5 ~ Byte 7 |
-----------------------------------------------------------------------------
| 0x04 (PCI)   | 0x71      | 0x01 (确认启动) | 0xFF   | 0x00   | 填充字节 (0x00) |
-----------------------------------------------------------------------------
示例接收：04 71 01 FF 00 00 00 00
/******************************************************************************************/

/******************************************************************************************
 * 3. 请求下载 (Request Download - 0x34)
 ******************************************************************************************

发送 (CAN 帧 - 首帧 FF)：
-----------------------------------------------------------------------------
| Byte 0       | Byte 1    | Byte 2       | Byte 3 | Byte 4 | Byte 5 | Byte 6 | Byte 7 |
-----------------------------------------------------------------------------
| 0x10 (PCI)   | 0x0C (总长度 12 字节)    | 0x34   | 0x00   | 0x44   | 0x00   | 0x00   | 0x00 |
-----------------------------------------------------------------------------
示例发送首帧：10 0C 34 00 44 00 00 00

发送 (CAN 帧 - 连续帧 CF)：
-----------------------------------------------------------------------------
| Byte 0       | Byte 1    | Byte 2       | Byte 3 | Byte 4 | Byte 5 | Byte 6 | Byte 7 |
-----------------------------------------------------------------------------
| 0x21 (PCI)   | 0x10      | 0x00         | 0x20   | 0x00   | 填充字节 (0x00)          |
-----------------------------------------------------------------------------
示例发送连续帧：21 10 00 20 00 00 00 00

接收 (CAN 帧)：
-----------------------------------------------------------------------------
| Byte 0       | Byte 1    | Byte 2       | Byte 3 ~ Byte 7            |
-----------------------------------------------------------------------------
| 0x03 (PCI)   | 0x74      | 0x20         | 填充字节 (0x00)             |
-----------------------------------------------------------------------------
示例接收：03 74 20 00 00 00 00 00
/******************************************************************************************/

/******************************************************************************************
 * 4. 传输数据 (Transfer Data - 0x36)
 ******************************************************************************************

发送 (CAN 帧 - 单帧 SF, 如果数据块 ≤ 7 字节)：
-----------------------------------------------------------------------------
| Byte 0       | Byte 1    | Byte 2 ~ Byte 7                              |
-----------------------------------------------------------------------------
| 0x07 (PCI)   | 0x36      | [数据块内容 (最多 6 字节)]                    |
-----------------------------------------------------------------------------
示例发送：07 36 <数据块内容>

发送 (CAN 帧 - 多帧 FF + CF, 如果数据块 > 7 字节)：
首帧 FF：
-----------------------------------------------------------------------------
| Byte 0       | Byte 1    | Byte 2       | Byte 3 ~ Byte 7              |
-----------------------------------------------------------------------------
| 0x10 (PCI)   | 数据总长度 | [首 6 字节数据内容]                          |
-----------------------------------------------------------------------------
示例发送首帧：10 xx <首 6 字节数据>

连续帧 CF：
-----------------------------------------------------------------------------
| Byte 0       | Byte 1 ~ Byte 7                                         |
-----------------------------------------------------------------------------
| 0x2X (PCI)   | [后续数据内容，最多 7 字节]                             |
-----------------------------------------------------------------------------
示例发送连续帧：2X <后续数据内容>

接收 (CAN 帧)：
-----------------------------------------------------------------------------
| Byte 0       | Byte 1    | Byte 2       | Byte 3 ~ Byte 7              |
-----------------------------------------------------------------------------
| 0x03 (PCI)   | 0x76      | 确认编号 (如 0x01)                          |
-----------------------------------------------------------------------------
示例接收：03 76 01 00 00 00 00 00
/******************************************************************************************/

/******************************************************************************************
 * 5. 数据传输完成 (Request Transfer Exit - 0x37)
 ******************************************************************************************

发送 (CAN 帧)：
-----------------------------------------------------------------------------
| Byte 0       | Byte 1    | Byte 2 ~ Byte 7                              |
-----------------------------------------------------------------------------
| 0x01 (PCI)   | 0x37      | 填充字节 (0x00)                              |
-----------------------------------------------------------------------------
示例发送：01 37 00 00 00 00 00 00

接收 (CAN 帧)：
-----------------------------------------------------------------------------
| Byte 0       | Byte 1    | Byte 2 ~ Byte 7                              |
-----------------------------------------------------------------------------
| 0x01 (PCI)   | 0x77      | 填充字节 (0x00)                              |
-----------------------------------------------------------------------------
示例接收：01 77 00 00 00 00 00 00
/******************************************************************************************/

/******************************************************************************************
 * 6. 校验例程 (Routine Control - 0x31)
 ******************************************************************************************
 发送 (CAN 帧)：
 -----------------------------------------------------------------------------
 | Byte 0       | Byte 1    | Byte 2       | Byte 3 | Byte 4 ~ Byte 7       |
 -----------------------------------------------------------------------------
 | 0x04 (PCI)   | 0x31      | 0x01 (启动校验) | 0xFF  |  (0x01)      |
 -----------------------------------------------------------------------------
 示例发送：04 31 01 FF 01 00 00 00
 接收 (CAN 帧)：
 -----------------------------------------------------------------------------
 | Byte 0       | Byte 1    | Byte 2       | Byte 3 | Byte 4 ~ Byte 7       |
 -----------------------------------------------------------------------------
 | 0x05(PCI)   | 0x71      | 0x01 (校验完成) | 0x0FF   | (0x01)      |
 -----------------------------------------------------------------------------
 示例接收：05 71 01 02 FF 01 00 00
******************************************************************************************/
/******************************************************************************************
* 7. 重置 ECU (ECU Reset - 0x11)
* -----------------------------------------------------------------------------
发送 (CAN 帧)：
----------------------------------------------------------------------------- 
| Byte 0       | Byte 1    | Byte 2 ~ Byte 7                            |
----------------------------------------------------------------------------- 
| 0x02 (PCI)   | 0x11      | 0x01 (硬重置)                              |
----------------------------------------------------------------------------- 
示例发送：02 11 01 00 00 00 00 00
接收 (CAN 帧)：
----------------------------------------------------------------------------- 
| Byte 0       | Byte 1    | Byte 2       | Byte 3 ~ Byte 7            |
----------------------------------------------------------------------------- 
| 0x02 (PCI)   | 0x51      | 0x01 (确认硬重置)                          |
----------------------------------------------------------------------------- 
示例接收：02 51 01 00 00 00 00 00
******************************************************************************************/

/* Private Includes ----------------------------------------------------------*/
#include "can_user.h"
#include "common.h"

/* Exported constants --------------------------------------------------------*/
#define APPLICATION_ADDRESS 0x8001800

#define PROG_START_ADDR 0x8001800
#define PROG_END_ADDR 0x8020000

#define CANID_RX 0x707
#define CANID_TX 0x70F

#define FC_FS_CTS 0 // ContinueToSend
#define FC_FS_WT 1 // Wait
#define FC_FS_OVFLW 2 // Overflow

#define true 1
#define false 0

/* Exported types ------------------------------------------------------------*/
typedef struct {
    uint32_t CanPort;
    uint16_t Id;
    uint8_t DLC;
    uint8_t Data[8];
    uint8_t Delay;
} canMsg;
/* Exported macro ------------------------------------------------------------*/

/* Exported variables --------------------------------------------------------*/

/* Exported function prototypes ----------------------------------------------*/
void can_uds_handle(uint32_t id, uint8_t dlc, uint8_t *data);
void can_uds_boot_poll(void);
#endif /* __CMD_USER_H */
 
 